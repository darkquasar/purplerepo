name: Validate repo-list.yaml

on:
  pull_request:
    branches: [main]
    paths:
      - 'repo-list.yaml'
  push:
    branches: [main, dev]
    paths:
      - 'repo-list.yaml'

permissions:
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for git diff analysis
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
      
      - name: Install dependencies
        run: uv sync --dev
      
      - name: Run pre-commit hooks
        run: |
          uv run pre-commit install
          uv run pre-commit run --all-files
      
      - name: Determine git comparison range
        id: git-range
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # For PRs, compare against the target branch
            echo "old_sha=${{ github.event.pull_request.base.sha }}" >> $GITHUB_OUTPUT
            echo "new_sha=${{ github.event.pull_request.head.sha }}" >> $GITHUB_OUTPUT
            echo "context=PR from ${{ github.event.pull_request.head.ref }} to ${{ github.event.pull_request.base.ref }}" >> $GITHUB_OUTPUT
          else
            # For pushes to main or dev, compare against previous commit
            echo "old_sha=${{ github.event.before }}" >> $GITHUB_OUTPUT
            echo "new_sha=${{ github.event.after }}" >> $GITHUB_OUTPUT
            echo "context=Push to ${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Validate repo-list.yaml changes
        id: validate-changes
        run: |
          echo "🔍 Validating changes for: ${{ steps.git-range.outputs.context }}"
          echo "📊 Comparing: ${{ steps.git-range.outputs.old_sha }} → ${{ steps.git-range.outputs.new_sha }}"
          
          # Create step summary header
          echo "# 📋 repo-list.yaml Validation Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Context:** ${{ steps.git-range.outputs.context }}" >> $GITHUB_STEP_SUMMARY
          echo "**Comparison:** \`${{ steps.git-range.outputs.old_sha }}\` → \`${{ steps.git-range.outputs.new_sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Run validation with change limits enforced
          if uv run python .github/workflows/scripts/detect_repo_changes.py \
            --old-sha "${{ steps.git-range.outputs.old_sha }}" \
            --new-sha "${{ steps.git-range.outputs.new_sha }}" \
            --enforce-limits; then
            
            echo "✅ Validation completed successfully!"
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "## ✅ Validation Passed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Your changes to \`repo-list.yaml\` have been validated successfully!" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### What was checked:" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ YAML syntax and structure" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Required fields present (\`repo_url\`, \`tags\`, \`contributor_name\`)" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Maximum 6 tags per entry" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ No duplicate repository URLs" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Valid GitHub/Gist URL format" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Proper tag naming conventions" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Maximum 15 changes per PR" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🚀 **Your changes are ready for review!**" >> $GITHUB_STEP_SUMMARY
            
          else
            echo "❌ Validation failed!"
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "## ❌ Validation Failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Your changes to \`repo-list.yaml\` failed validation. Please check the logs above for details." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Common issues:" >> $GITHUB_STEP_SUMMARY
            echo "- **Too many changes**: Maximum 15 entries can be added/removed per PR" >> $GITHUB_STEP_SUMMARY
            echo "- **Invalid format**: Check YAML syntax and required fields" >> $GITHUB_STEP_SUMMARY
            echo "- **Duplicate URLs**: Each repository URL must be unique" >> $GITHUB_STEP_SUMMARY
            echo "- **Too many tags**: Maximum 6 tags per entry" >> $GITHUB_STEP_SUMMARY
            echo "- **Invalid tag format**: Use lowercase with hyphens (e.g., \`offensive-tradecraft\`)" >> $GITHUB_STEP_SUMMARY
            echo "- **Missing contributor**: \`contributor_name\` field is required" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### How to fix:" >> $GITHUB_STEP_SUMMARY
            echo "1. Review the validation errors in the workflow logs above" >> $GITHUB_STEP_SUMMARY
            echo "2. Fix the issues in your branch" >> $GITHUB_STEP_SUMMARY
            echo "3. Push the changes to update this PR" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Development setup:" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
            echo "uv sync --dev" >> $GITHUB_STEP_SUMMARY
            echo "uv run pre-commit install" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Test locally:" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
            echo "uv run pre-commit run --all-files" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            
            # Exit with error code to fail the workflow
            exit 1
          fi
